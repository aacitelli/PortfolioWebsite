$csBlack: #272727;
$csGray: #747474;
$csRed: #FF652F;
$csYellow: #FFE400;
$csGreen: #14A76C;
$csBlue: rgb(68, 160, 244);

/* Universal Styles (Applied to Everything) */
#navbar 
{
    background-color: rgb(25, 25, 25);

    position: sticky;
    left: 0px;
    width: 175px;
    height: 100vh;
}

#navbar > ul 
{
    background-color: inherit;

    padding: 0;
    list-style-type: none;
}

// Color accents on the side of the navbar 
#navbar > ul > #navbarLink1 { border-right: 10px $csGray solid; }
#navbar > ul > #navbarLink2 { border-right: 10px $csBlue solid; }
#navbar > ul > #navbarLink3 { border-right: 10px $csRed solid; }
#navbar > ul > #navbarLink4 { border-right: 10px $csYellow solid; }
#navbar > ul > #navbarLink5 { border-right: 10px $csGreen solid; }

// Alternating shades of gray for background
#navbar > ul > .lighterNavbarButton { background-color: rgb(42, 42, 42); }
#navbar > ul > .darkerNavbarButton { background-color: rgb(28, 28, 28); }

// TODO: Consider making these look more natural (look up bezier curves and see if it's realistic) 
@keyframes navbarHoverEffect 
{
    0% { left: 175px; }
    100% { left: 0px; }
}

@keyframes navbarHoverReturnEffect 
{
    0% { left: 0px; }
    100% { left: 175px; }
}

// Triggers the animation on hover, basically
// (I have to do this a weird way because the animation is triggered whenever a DIFFERENT element is hovered over)
// TODO: Make it so starting and stopping don't start from the beginning or end, but rather from where they're currently at 
// TODO: Make the text stay in front of the animation (Will probably have to store the text in another div with higher z-index than the animation)
// TODO: Make it so that when you initially load the page it doesn't start with them all extended (this occurs because you aren't hovering, so it executes the "not hovering" animation
/*
#navbar > ul > li:hover > #onHoverEffect1 { animation-name: navbarHoverEffect; animation-duration: 1s; animation-fill-mode: forwards; }
#navbar > ul > li:hover > #onHoverEffect2 { animation-name: navbarHoverEffect; animation-duration: 1s; animation-fill-mode: forwards;}
#navbar > ul > li:hover > #onHoverEffect3 { animation-name: navbarHoverEffect; animation-duration: 1s; animation-fill-mode: forwards;}
#navbar > ul > li:hover > #onHoverEffect4 { animation-name: navbarHoverEffect; animation-duration: 1s; animation-fill-mode: forwards;}
#navbar > ul > li:hover > #onHoverEffect5 { animation-name: navbarHoverEffect; animation-duration: 1s; animation-fill-mode: forwards;}

// Allows the animation to go smoothly back to the beginning instead of instantly resetting
#navbar > ul > li:not(:hover) > #onHoverEffect1 { animation-name: navbarHoverReturnEffect; animation-duration: 1s; animation-fill-mode: backwards; }
#navbar > ul > li:not(:hover) > #onHoverEffect2 { animation-name: navbarHoverReturnEffect; animation-duration: 1s; animation-fill-mode: forwards; }
#navbar > ul > li:not(:hover) > #onHoverEffect3 { animation-name: navbarHoverReturnEffect; animation-duration: 1s; animation-fill-mode: forwards;}
#navbar > ul > li:not(:hover) > #onHoverEffect4 { animation-name: navbarHoverReturnEffect; animation-duration: 1s; animation-fill-mode: forwards;}
#navbar > ul > li:not(:hover) > #onHoverEffect5 { animation-name: navbarHoverReturnEffect; animation-duration: 1s; animation-fill-mode: forwards;}
*/

#navbar > ul > li 
{
    background-color: inherit;
    font-size: 22px;

    width: 100%;

    color: white;

    // Causes any children with absolute positioning to be positioned relative to THIS div now
    position: relative;
    z-index: 999;

    a
    {
        display: block;
        width: 100%;
        height: 100%;

        padding: 10px 18px;

        background-color: inherit;
        color: inherit;
        text-decoration: none;
    }

    .onHoverEffect 
    {
        width: 175px;
        height: 100%;
        
        position: absolute;
        z-index: 1000;

        left: 175px;
        top: 0px;

        transition: transform 500ms;
    }

    :hover + .onHoverEffect, .onHoverEffect:hover 
    {
        transform: translate(-175px, 0);
    } 

    #onHoverEffect1 { background-color: $csGray; }
    #onHoverEffect2 { background-color: $csBlue; }
    #onHoverEffect3 { background-color: $csRed; }
    #onHoverEffect4 { background-color: $csYellow; }
    #onHoverEffect5 { background-color: $csGreen; }
}

#navbar > div 
{
    position: absolute;
    bottom: 10px;
    right: 10px;

    background-color: inherit;
    
    a
    {
        background-color: inherit;

        img
        {
            display: inline-block;
            background-color: inherit;

            margin-right: 10px;

            :last-of-type
            {
                margin-right: 0px;
            }
        } 
    }
}
 
/* Applies to 768px and up */
@media only screen and (min-width: 768px)
{

}

/* Applies to 992px and up */
@media only screen and (min-width: 992px)
{

}

/* Applies to basically all desktop resolutions */
@media only screen and (min-width: 1200px) 
{

}